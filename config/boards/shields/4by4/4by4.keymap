/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define BT   1

/ {
    macros {
        ctrl_alt_a: ctrl_alt_a {
            label = "CTRL_ALT_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp A>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_b: ctrl_alt_b {
            label = "CTRL_ALT_B";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp B>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_c: ctrl_alt_c {
            label = "CTRL_ALT_C";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp C>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_d: ctrl_alt_d {
            label = "CTRL_ALT_D";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp D>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_e: ctrl_alt_e {
            label = "CTRL_ALT_E";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp E>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_f: ctrl_alt_f {
            label = "CTRL_ALT_F";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp F>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_g: ctrl_alt_g {
            label = "CTRL_ALT_G";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp G>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_h: ctrl_alt_h {
            label = "CTRL_ALT_H";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp H>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_i: ctrl_alt_i {
            label = "CTRL_ALT_I";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp I>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_j: ctrl_alt_j {
            label = "CTRL_ALT_J";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp J>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_k: ctrl_alt_k {
            label = "CTRL_ALT_K";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp K>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_l: ctrl_alt_l {
            label = "CTRL_ALT_L";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp L>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_m: ctrl_alt_m {
            label = "CTRL_ALT_M";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp M>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_n: ctrl_alt_n {
            label = "CTRL_ALT_N";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp N>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    
    
        ctrl_alt_o: ctrl_alt_o {
            label = "CTRL_ALT_O";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_CONTROL>
                , <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp O>
                , <&macro_release &kp LEFT_CONTROL>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    };
    


    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------
// |   7   |    8    |    9    |    /    |
// |   4   |    5    |    6    |    *    |
// |   1   |    2    |    3    |    -    |
// |   BT  |    0    |    .    |    +    |
           
            bindings = <
            &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_DIVIDE
            &kp KP_N4     &kp KP_N5     &kp KP_N6     &kp KP_MULTIPLY
            &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_MINUS
            &mo 1         &kp KP_N0     &kp KP_DOT    &kp KP_PLUS
            >;
            // bindings = <
            // &ctrl_alt_a     &ctrl_alt_b     &ctrl_alt_c     &ctrl_alt_d
            // &ctrl_alt_e     &ctrl_alt_f     &ctrl_alt_g     &ctrl_alt_h
            // &ctrl_alt_i     &ctrl_alt_j     &ctrl_alt_k     &ctrl_alt_l
            // &mo 1           &ctrl_alt_m     &ctrl_alt_n     &ctrl_alt_o
            // >;
            };

            bt_layer {
// ------------------------------------------------
// |   BT 1  |   BT 2   |  BT 3   |  BT 4   |
// |  BT RST |          |         |         |
// |   USB   |    BLE   |         | vol dn  |
// |         |    RST   |         | vol up  |

            bindings = <
            &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3
            &bt BT_CLR     &trans         &trans         &trans
            &out OUT_USB   &out OUT_BLE   &trans         &kp C_VOL_DN
            &none          &bootloader    &trans         &kp C_VOL_UP
            >;
         };
    };
};
